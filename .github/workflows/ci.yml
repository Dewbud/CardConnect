name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4', '8.0']

    name: PHP ${{ matrix.php-versions }}
    env:
      extensions: php-json, curl, mbstring
      key: cache-v1 # can be any string, change to clear the extension cache.

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup cache environment
        id: extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}
          key: ${{ env.key }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.extcache.outputs.dir }}
          key: ${{ steps.extcache.outputs.key }}
          restore-keys: ${{ steps.extcache.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ${{ env.extensions }}

      # Composer Cache
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
          
      # Cache PHP dependencies
      - name: Cache PHP dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
    
      # Composer install dependencies
      - name: Install dependencies
        uses: php-actions/composer@v5
        with:
          php_version: ${{ matrix.php-versions }}
          version: 1

      # Runs tests
      - name: Execute tests
        run: vendor/bin/phpunit --verbose
